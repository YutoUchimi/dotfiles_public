#!/usr/bin/env python

import argparse
import os.path as osp
import shlex
import subprocess
import tempfile

import imageio
import tqdm


def speed_up_video_with_mencoder(video_file, times, out_file):
    reader = imageio.get_reader(video_file)
    meta_data  = reader.get_meta_data()
    fps = meta_data['fps']
    size = meta_data['size']

    for macro_block_size in xrange(16, 7, -1):
        if size[0] % macro_block_size == 0 and \
                size[1] % macro_block_size == 0:
            break

    writer = imageio.get_writer(out_file, fps=fps * times,
                                macro_block_size=macro_block_size)
    for frame in tqdm.tqdm(reader):
        writer.append_data(frame)

    reader.close()
    writer.close()


def speed_up_video(video_file, times):
    base, ext = osp.splitext(video_file)
    out_file = base + '_x{times}'.format(times=times) + ext

    speed_up_video_with_mencoder(video_file, times, out_file)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('video_files', nargs='+', help='File to convert.')
    parser.add_argument('-x', '--times', type=int, required=True,
                        help='How many times to speed/slow up/down the video.')
    args = parser.parse_args()

    video_files = args.video_files
    times = args.times

    for file_ in video_files:
        speed_up_video(video_file=file_, times=times)


if __name__ == '__main__':
    main()
